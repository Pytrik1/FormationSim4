<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from robot_base_multiple.xacro      | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="nexus" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Nexus and laser with prefix argument to be used in namespacing -->
  <material name="Black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="Green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="Yellow">
    <color rgba="0.95 0.6 0.0 1.0"/>
  </material>
  <material name="DarkGrey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="Grey">
    <color rgba="0.7 0.7 0.7 1.0"/>
  </material>
  <material name="Grey2">
    <color rgba="0.9 0.9 0.9 1.0"/>
  </material>
  <material name="Red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="White">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="GunMetalBrushedAluminum">
    <texture filename="package://smart_arm_description/Media/materials/textures/gun_metal_brushed_aluminum.jpg"/>
  </material>
  <!-- ros_control plugin
  <gazebo>

   <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/nexus</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
   </plugin>

   </gazebo>
 -->
  <!-- base_footprint is a fictitious link(frame) that is on the ground right below the front part, navigation stack depends on this frame -->
  <link name="base_footprint">
  </link>
  <joint name="base_footprint_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="0 0 0.0"/>
    <parent link="base_footprint"/>
    <child link="the_base"/>
    <dynamics damping="1.0" friction="1"/>
  </joint>
  <link name="the_base">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://nexus/meshes/base-binary.stl"/>
      </geometry>
      <material name="Yellow"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.05"/>
      <geometry>
        <box size="0.5 0.4 0.1"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="20.0"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="20.0" ixy="0.0" ixz="0.0" iyy="20.0" iyz="0.0" izz="20.0"/>
    </inertial>
  </link>
  <gazebo>
    <!-- planar plugin is very simple, it wil ALWAYS force a speed, so if lifted, the object doesn't fall.
	   but it works sort of...
	   force_based exerts force and torque to a blob, works better.
	  -->
    <plugin filename="libgazebo_ros_force_based_move.so" name="nexus_controller">
      <!--<plugin name="nexus_controller" filename="libgazebo_ros_planar_move.so">-->
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
  </gazebo>
  <gazebo reference="the_base">
    <material>Gazebo/Orange</material>
    <turnGravityOff>false</turnGravityOff>
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="1000000.0"/>
    <kd value="1.0"/>
  </gazebo>
  <gazebo reference="base_footprint_joint">
    <stopKd value="1.0"/>
    <stopKp value="1000000.0"/>
    <fudgeFactor value="0.5"/>
  </gazebo>
  <joint name="laser_bottom_joint" type="fixed">
    <origin rpy="3.14159265359 0 0" xyz="0.08 0 0.15"/>
    <parent link="base_footprint"/>
    <child link="base_laser_bottom"/>
  </joint>
  <link name="base_laser_bottom">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.041"/>
      </geometry>
      <material name="DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.041"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.05"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="base_laser_middle_joint" type="fixed">
    <parent link="base_laser_bottom"/>
    <child link="base_laser_middle"/>
    <origin rpy="0 0 0" xyz="0 0 0.02625"/>
  </joint>
  <link name="base_laser_middle">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0115" radius=".02"/>
      </geometry>
      <material name="DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0115" radius=".02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.05"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="base_laser_joint" type="fixed">
    <parent link="base_laser_middle"/>
    <child link="base_laser"/>
    <origin rpy="0 0 0" xyz="0 0 0.0145"/>
  </joint>
  <link name="base_laser">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0175" radius=".0185"/>
      </geometry>
      <material name="DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0175" radius=".0185"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.05"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <!-- hokuyo -->
  <gazebo reference="base_laser_bottom">
    <sensor name="laser_sensor" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_gpu_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/scan</topicName>
        <frameName>base_laser_bottom</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- hier de arm -->
</robot>

