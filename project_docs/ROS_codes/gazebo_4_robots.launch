<launch>

  <arg name="sim" default="true" />
  <arg name="1" default="n_1" />
  <arg name="2" default="n_2" />
  <arg name="3" default="n_3" />
  <arg name="4" default="n_4" />

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="nexusport" default="/dev/ttyUSB.nexus" />
  <arg name="armport" default="/dev/ttyUSB.arm" />

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="/home/s2504111/catkin_ws/src/platoon_merging/worlds/road.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>


 <!-- ROBOT1 -->
  <group ns="$(arg 1)">
    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '/home/s2504111/catkin_ws/src/platoon_merging/urdf/robot_base_multiple.xacro' prefix:=$(arg 1)" />
    
    <node name="nexus" pkg="nexus" type="nexus_driver" output="screen" clear_params="true">
      <rosparam file="$(find nexus)/config/nexus.yaml" command="load" />
      <param name="sim" value="$(arg sim)" />
      <param name="port" value="$(arg nexusport)" />
      <param name="namespace" value="$(arg 1)" />  <!-- voor de frames --> 
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
      <param name="publish_frequency" type="double" value="20.0" />
    </node>
  </group>

 <!-- ROBOT2 -->
  <group ns="$(arg 2)">
   <!-- Load the URDF into the ROS Parameter Server -->
   <param name="robot_description" command="$(find xacro)/xacro --inorder '/home/s2504111/catkin_ws/src/platoon_merging/urdf/robot_base_multiple.xacro' prefix:=$(arg 2)" />
   
   <node name="nexus" pkg="nexus" type="nexus_driver" output="screen" clear_params="true">
      <rosparam file="$(find nexus)/config/nexus.yaml" command="load" />
      <param name="sim" value="$(arg sim)" />
      <param name="port" value="$(arg nexusport)" />
      <param name="namespace" value="$(arg 2)" />  <!-- voor de frames --> 
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
      <param name="publish_frequency" type="double" value="20.0" />
    </node>
  </group> 

 <!-- ROBOT3 -->
  <group ns="$(arg 3)">
   <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '/home/s2504111/catkin_ws/src/platoon_merging/urdf/robot_base_multiple.xacro' prefix:=$(arg 3)" />
    
    <node name="nexus" pkg="nexus" type="nexus_driver" output="screen" clear_params="true">
      <rosparam file="$(find nexus)/config/nexus.yaml" command="load" />
      <param name="sim" value="$(arg sim)" />
      <param name="port" value="$(arg nexusport)" />
      <param name="namespace" value="$(arg 3)" />  <!-- voor de frames --> 
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
      <param name="publish_frequency" type="double" value="20.0" />
    </node>
  </group> 

 <!-- ROBOT4 -->
  <group ns="$(arg 4)">
   <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description"
    command="$(find xacro)/xacro --inorder '/home/s2504111/catkin_ws/src/platoon_merging/urdf/robot_base_multiple.xacro' prefix:=$(arg 4)" />

    <node name="nexus" pkg="nexus" type="nexus_driver" output="screen" clear_params="true">
      <rosparam file="$(find nexus)/config/nexus.yaml" command="load" />
      <param name="sim" value="$(arg sim)" />
      <param name="port" value="$(arg nexusport)" />
      <param name="namespace" value="$(arg 4)" />  <!-- voor de frames --> 
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
      <param name="publish_frequency" type="double" value="20.0" />
    </node>
  </group> 

  <!-- ros_control nexus launch file -->
<!--include file="$(find rrbot_control)/launch/rrbot_control.launch" /-->

<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="spawn_nexus_1" pkg="gazebo_ros" type="spawn_model" args="-urdf -param n_1/robot_description -x 2.5 -y 0.5 -Y 0 -model nexus_1 " respawn="false" output="screen"/>

<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="spawn_nexus_2" pkg="gazebo_ros" type="spawn_model" args="-urdf -param n_2/robot_description -x 1.5 -y -0.5 -Y 0  -model nexus_2 " respawn="false" output="screen" />

<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="spawn_nexus_3" pkg="gazebo_ros" type="spawn_model" args="-urdf -param n_3/robot_description -x 1.25 -y 0.5 -Y 0 -model nexus_3 " respawn="false" output="screen"/>

<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="spawn_nexus_4" pkg="gazebo_ros" type="spawn_model" args="-urdf -param n_4/robot_description -x 0.5 -y 0.5 -Y 0 -model nexus_4 " respawn="false" output="screen"/>



</launch>
